{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/liupeiqi/Desktop/cloudresume/cloud-app/src/Resume.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from './Nav';\n\nfunction Resume() {\n  _s();\n\n  const [resume, setResume] = useState({});\n\n  const fetch_resume = () => {\n    const data = require('./resume.json');\n\n    return data;\n  };\n\n  useEffect(() => {\n    setResume(fetch_resume());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"resume\",\n    children: [/*#__PURE__*/_jsxDEV(Theme, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      title: \"EDUCATION\",\n      content: resume.education\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      title: \"CERTIFICATION\",\n      content: resume.cert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      title: \"SKILLS\",\n      content: resume.skills\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n      title: \"education\",\n      content: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Resume, \"DTm0YMEvci8IBzheDLzY6c++Tmw=\");\n\n_c = Resume;\n\nconst Collapsible = props => {\n  _s2();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [display, setDisplay] = useState({\n    display: 'none'\n  });\n\n  const changeDisplay = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      setDisplay({\n        display: 'none'\n      });\n    } else {\n      setIsOpen(true);\n      setDisplay({\n        display: 'block'\n      });\n    }\n  };\n\n  if (typeof props.content === typeof []) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"resume-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"collapsibleBT\",\n        onClick: changeDisplay,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapsible-content\",\n        style: display,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: \"backend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), props.content[0].backend.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this); // props.content.map(obj => {\n    //   for (const [key, value] of Object.entries(obj)) {\n    //     if (typeof value === typeof []) {\n    //       return (\n    //         <div id='resume-collapse'>\n    //           <button\n    //             type='button'\n    //             className='collapsibleBT'\n    //             onClick={changeDisplay}\n    //           >\n    //             {props.title}\n    //           </button>\n    //           <div className='collapsible-content' style={display}>\n    //             <ul>{key}</ul>\n    //             {value.map(item => (\n    //               <li>{item}</li>\n    //             ))}\n    //           </div>\n    //         </div>\n    //       )\n    //     } else {\n    //     }\n    //   }\n    // })\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"resume-collapse\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"collapsibleBT\",\n      onClick: changeDisplay,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapsible-content\",\n      style: display,\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Collapsible, \"o6CSWhgE+zlAC9ueRPD0FSgfdOc=\");\n\n_c2 = Collapsible;\n\nconst Theme = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"resume-title-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"resume-title\",\n      children: \"RESUME ON THE CLOUD, ACCESS ANYWHERE, WHENEVER YOU NEED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      type: \"other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Theme;\nexport default Resume;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Resume\");\n$RefreshReg$(_c2, \"Collapsible\");\n$RefreshReg$(_c3, \"Theme\");","map":{"version":3,"sources":["/Users/liupeiqi/Desktop/cloudresume/cloud-app/src/Resume.js"],"names":["React","useState","useEffect","Nav","Resume","resume","setResume","fetch_resume","data","require","education","cert","skills","Collapsible","props","isOpen","setIsOpen","display","setDisplay","changeDisplay","content","title","backend","map","item","Theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Nav from './Nav'\n\nfunction Resume () {\n  const [resume, setResume] = useState({})\n\n  const fetch_resume = () => {\n    const data = require('./resume.json')\n    return data\n  }\n\n  useEffect(() => {\n    setResume(fetch_resume())\n  }, [])\n\n  return (\n    <div id='resume'>\n      <Theme />\n      <Collapsible title='EDUCATION' content={resume.education} />\n      <Collapsible title='CERTIFICATION' content={resume.cert} />\n      <Collapsible title='SKILLS' content={resume.skills} />\n      <Collapsible title='education' content='test' />\n    </div>\n  )\n}\n\nconst Collapsible = props => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [display, setDisplay] = useState({ display: 'none' })\n\n  const changeDisplay = () => {\n    if (isOpen) {\n      setIsOpen(false)\n      setDisplay({ display: 'none' })\n    } else {\n      setIsOpen(true)\n      setDisplay({ display: 'block' })\n    }\n  }\n\n  if (typeof props.content === typeof []) {\n     return(\n        <div id='resume-collapse'>\n        <button type='button' className='collapsibleBT' onClick={changeDisplay}>\n          {props.title}\n        </button>\n        <div className='collapsible-content' style={display}>\n          <ul>backend</ul>\n          {props.content[0].backend.map(item => (\n              <li>{item}</li>\n          ))}\n        </div>\n      </div>\n     );\n    // props.content.map(obj => {\n    //   for (const [key, value] of Object.entries(obj)) {\n    //     if (typeof value === typeof []) {\n    //       return (\n    //         <div id='resume-collapse'>\n    //           <button\n    //             type='button'\n    //             className='collapsibleBT'\n    //             onClick={changeDisplay}\n    //           >\n    //             {props.title}\n    //           </button>\n    //           <div className='collapsible-content' style={display}>\n    //             <ul>{key}</ul>\n    //             {value.map(item => (\n    //               <li>{item}</li>\n    //             ))}\n    //           </div>\n    //         </div>\n    //       )\n    //     } else {\n    //     }\n    //   }\n    // })\n  } \n    return (\n      <div id='resume-collapse'>\n        <button type='button' className='collapsibleBT' onClick={changeDisplay}>\n          {props.title}\n        </button>\n        <div className='collapsible-content' style={display}>\n          {props.content}\n        </div>\n      </div>\n    )\n}\n\nconst Theme = () => {\n  return (\n    <div id='resume-title-box'>\n      <span id='resume-title'>\n        RESUME ON THE CLOUD, ACCESS ANYWHERE, WHENEVER YOU NEED\n      </span>\n      <Nav type='other' />\n    </div>\n  )\n}\n\nexport default Resume\n"]},"metadata":{},"sourceType":"module"}